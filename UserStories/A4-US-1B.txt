2. Split story B: As a CS 314 student, I want to evaluate my Android GUI with respect to usability, so that I can provide evidence and rationale for subsequent GUI design changes.
Acceptance Criteria (AC):
	1. Two usability goals are evaluated:
		A. Efficiency of the user interacting with the user interface to complete a task. A typical task related to efficiency might be to explore all rooms. Another task related to efficiency might be to find treasure ("gold bars" for example) and bring it out of the cave.
		B. Effectiveness of the user interface in causing the program to follow the user's intent. A typical task related to effectiveness might be to go in a desired direction. Another task related to effectiveness might be to pick up and/or drop the desired items.
	2. Two questions based on specific user tasks are created for each of the 2 usability goals.
	3. Answering all 4 questions generates data that can drive design changes in the GUI, and that can provide rationale for design improvement. No question can be answered with a simple "yes" or "no" answer.
	4. Meet 'Definition of Done' (DoD), below.

Tasks: 3 SP
    -


Definition of Done:
    For all user stories:
    - GitHub main branch code runs with no warnings and a user can
       access a GUI to execute all commands that were possible from the command line version
    - All code changes are reviewed before being merged onto the main branch (see A1,
       tutorial 5 for instructions on the GitHub Pull Request Code Review System you must
       use for reviews)
    - All code changes are merged into the main branch
    - All code is unit tested and all tests pass